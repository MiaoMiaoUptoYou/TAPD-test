# -*- coding: utf-8 -*-
# Generated by Selenium IDE
import os
import sys
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../')))
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import pyperclip
import win32gui
import win32con
import win32api


def UpLoad_File(webEle, filePath):
    """
    使用 python 的 win32api，win32con 模拟按键输入，实现文件上传操作。
    :param webEle: 页面中的上传文件按钮,是已经获取到的对象
    :param filePath: 要上传的文件地址，绝对路径。如：D:\\timg (1).jpg
    :param check_Input:检查input标签中是否有值 #仅用来检查，在return 处调用一次，多余可删除
    :return: 成功返回：上传文件后的地址，失败返回：""
    """
    pyperclip.copy(filePath)  # 复制文件路径到剪切板
    webEle.click()  # 点击上传图片按钮
    time.sleep(3)  # 等待程序加载 时间 看你电脑的速度 单位(秒)
    # 发送 ctrl（17） + V（86）按钮
    win32api.keybd_event(17, 0, 0, 0)
    win32api.keybd_event(86, 0, 0, 0)
    win32api.keybd_event(86, 0, win32con.KEYEVENTF_KEYUP, 0)  # 松开按键
    win32api.keybd_event(17, 0, win32con.KEYEVENTF_KEYUP, 0)
    time.sleep(1)
    win32api.keybd_event(13, 0, 0, 0)  # (回车)
    win32api.keybd_event(13, 0, win32con.KEYEVENTF_KEYUP, 0)  # 松开按键
    win32api.keybd_event(13, 0, 0, 0)  # (回车)
    win32api.keybd_event(13, 0, win32con.KEYEVENTF_KEYUP, 0)
    time.sleep(2)
    # return check_Input.get_attribute("value")

#测试超级管理员-党支部管理-新建
class TestTest9():
    def setup_method(self, method):
        self.option = webdriver.ChromeOptions()
        self.option.add_argument(r'user-data-dir=C:\Users\ZHUDIE\AppData\Local\Google\Chrome\User Data2')
        self.driver = webdriver.Chrome("chromedriver",0,options=self.option)
        self.driver.implicitly_wait(10)
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_test9(self):
        self.driver.get("http://www.cuglight.space/system/user")
        self.driver.maximize_window()
        time.sleep(3)
        self.driver.find_element(By.CSS_SELECTOR, ".is-active > .el-submenu__title").click()
        time.sleep(3)
        self.driver.find_element(By.CSS_SELECTOR, ".is-active > .el-submenu__title").click()
        time.sleep(3)
        self.driver.find_element(By.CSS_SELECTOR, ".is-active > span").click()
        time.sleep(3)
        #党支部
        self.driver.find_element(By.CSS_SELECTOR, ".is-active .nest-menu:nth-child(4) span").click()
        time.sleep(3)
        element = self.driver.find_element(By.CSS_SELECTOR, ".is-active .nest-menu:nth-child(4) span")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        time.sleep(3)
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        time.sleep(3)
        #新建
        self.driver.find_element(By.CSS_SELECTOR, ".is-plain").click()
        time.sleep(3)
        element = self.driver.find_element(By.CSS_SELECTOR, ".is-plain")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        time.sleep(3)
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        time.sleep(3)
        self.driver.find_element(By.CSS_SELECTOR,
                                 ".vue-treeselect__input-container:nth-child(2) > .vue-treeselect__input").click()
        time.sleep(3)
        element = self.driver.find_element(By.CSS_SELECTOR, ".el-row:nth-child(1) > .el-col-24")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).release().perform()
        time.sleep(3)
